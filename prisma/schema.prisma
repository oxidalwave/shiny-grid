// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mysql"
    // NOTE: When using mysql or sqlserver, uncomment the @db.Text annotations in model Account below
    // Further reading:
    // https://next-auth.js.org/adapters/prisma#create-the-prisma-schema
    // https://www.prisma.io/docs/reference/api-reference/prisma-schema-reference#string
    url      = env("DATABASE_URL")

    relationMode = "prisma"
}

// Necessary for Next auth
model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? @db.Text
    access_token      String? @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? @db.Text
    session_state     String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
    @@index([userId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@index([userId])
}

model User {
    id            String    @id @default(cuid())
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    image         String?
    accounts      Account[]
    sessions      Session[]
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}

model Type {
    id                    String                     @id @default(cuid())
    name                  String
    generationIntroduced  Int
    pokemonAlternateForms PokemonAlternateFormType[]
    PokemonRegionalForms  PokemonRegionalFormType[]
    PokemonMegas          PokemonMegaType[]
    PokemonType           PokemonType[]

    @@unique([name])
}

model Ability {
    id                    String                        @id @default(cuid())
    name                  String
    pokemonAlternateForms PokemonAlternateFormAbility[]
    pokemonRegionalForms  PokemonRegionalFormAbility[]
    PokemonMegas          PokemonMegaAbility[]
    PokemonAbility        PokemonAbility[]

    @@unique([name])
}

model EggGroup {
    id                           String                         @id @default(cuid())
    name                         String
    pokemonEggGroup              PokemonEggGroup[]
    PokemonAlternateFormEggGroup PokemonAlternateFormEggGroup[]
    PokemonRegionalFormEggGroup  PokemonRegionalFormEggGroup[]

    @@unique([name])
}

model Pokemon {
    id             String                 @id @default(cuid())
    name           String
    nationalDexId  Int
    hp             Int
    attack         Int
    defense        Int
    specialAttack  Int
    specialDefense Int
    speed          Int
    evWorth        String
    gender         String
    evolve         String
    catchRate      Int
    imageUrl       String
    forms          PokemonAlternateForm[]
    regionalForms  PokemonRegionalForm[]
    megas          PokemonMega[]
    types          PokemonType[]
    abilities      PokemonAbility[]
    eggGroups      PokemonEggGroup[]
}

model PokemonEggGroup {
    pokemon    Pokemon  @relation(fields: [pokemonId], references: [id])
    eggGroup   EggGroup @relation(fields: [eggGroupId], references: [id])
    pokemonId  String
    eggGroupId String

    @@unique([pokemonId, eggGroupId])
    @@index([pokemonId])
    @@index([eggGroupId])
}

model PokemonType {
    pokemon   Pokemon @relation(fields: [pokemonId], references: [id])
    type      Type    @relation(fields: [typeId], references: [id])
    pokemonId String
    typeId    String

    @@unique([pokemonId, typeId])
    @@index([pokemonId])
    @@index([typeId])
}

model PokemonAbility {
    pokemon   Pokemon @relation(fields: [pokemonId], references: [id])
    ability   Ability @relation(fields: [abilityId], references: [id])
    pokemonId String
    abilityId String

    @@unique([pokemonId, abilityId])
    @@index([pokemonId])
    @@index([abilityId])
}

model PokemonAlternateForm {
    id                           String                         @id @default(cuid())
    name                         String
    hp                           Int
    attack                       Int
    defense                      Int
    specialAttack                Int
    specialDefense               Int
    speed                        Int
    types                        PokemonAlternateFormType[]
    abilities                    PokemonAlternateFormAbility[]
    evWorth                      String
    gender                       String
    evolve                       String
    pokemon                      Pokemon                        @relation(fields: [pokemonId], references: [id])
    pokemonId                    String
    PokemonAlternateFormEggGroup PokemonAlternateFormEggGroup[]

    @@index([pokemonId])
}

model PokemonAlternateFormEggGroup {
    form       PokemonAlternateForm @relation(fields: [formId], references: [id])
    eggGroup   EggGroup             @relation(fields: [eggGroupId], references: [id])
    formId     String
    eggGroupId String

    @@unique([formId, eggGroupId])
    @@index([formId])
    @@index([eggGroupId])
}

model PokemonAlternateFormType {
    form   PokemonAlternateForm @relation(fields: [formId], references: [id])
    type   Type                 @relation(fields: [typeId], references: [id])
    formId String
    typeId String

    @@unique([formId, typeId])
    @@index([formId])
    @@index([typeId])
}

model PokemonAlternateFormAbility {
    form      PokemonAlternateForm @relation(fields: [formId], references: [id])
    ability   Ability              @relation(fields: [abilityId], references: [id])
    formId    String
    abilityId String

    @@unique([formId, abilityId])
    @@index([formId])
    @@index([abilityId])
}

model PokemonMega {
    id             String               @id @default(cuid())
    name           String
    hp             Int
    attack         Int
    defense        Int
    specialAttack  Int
    specialDefense Int
    speed          Int
    types          PokemonMegaType[]
    abilities      PokemonMegaAbility[]
    pokemon        Pokemon              @relation(fields: [pokemonId], references: [id])
    pokemonId      String

    @@index([pokemonId])
}

model PokemonMegaType {
    mega   PokemonMega @relation(fields: [megaId], references: [id])
    type   Type        @relation(fields: [typeId], references: [id])
    megaId String
    typeId String

    @@unique([megaId, typeId])
    @@index([megaId])
    @@index([typeId])
}

model PokemonMegaAbility {
    mega      PokemonMega @relation(fields: [megaId], references: [id])
    ability   Ability     @relation(fields: [abilityId], references: [id])
    megaId    String
    abilityId String

    @@unique([megaId, abilityId])
    @@index([megaId])
    @@index([abilityId])
}

model PokemonRegionalForm {
    id                          String                        @id @default(cuid())
    name                        String
    hp                          Int
    attack                      Int
    defense                     Int
    specialAttack               Int
    specialDefense              Int
    speed                       Int
    types                       PokemonRegionalFormType[]
    abilities                   PokemonRegionalFormAbility[]
    evWorth                     String
    gender                      String
    evolve                      String
    pokemon                     Pokemon                       @relation(fields: [pokemonId], references: [id])
    pokemonId                   String
    PokemonRegionalFormEggGroup PokemonRegionalFormEggGroup[]

    @@index([pokemonId])
}

model PokemonRegionalFormEggGroup {
    form       PokemonRegionalForm @relation(fields: [formId], references: [id])
    eggGroup   EggGroup            @relation(fields: [eggGroupId], references: [id])
    formId     String
    eggGroupId String

    @@unique([formId, eggGroupId])
    @@index([formId])
    @@index([eggGroupId])
}

model PokemonRegionalFormType {
    form   PokemonRegionalForm @relation(fields: [formId], references: [id])
    type   Type                @relation(fields: [typeId], references: [id])
    formId String
    typeId String

    @@unique([formId, typeId])
    @@index([formId])
    @@index([typeId])
}

model PokemonRegionalFormAbility {
    form      PokemonRegionalForm @relation(fields: [formId], references: [id])
    ability   Ability             @relation(fields: [abilityId], references: [id])
    formId    String
    abilityId String

    @@unique([formId, abilityId])
    @@index([formId])
    @@index([abilityId])
}
